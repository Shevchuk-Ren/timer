{"version":3,"sources":["components/Timer/Timer.jsx","components/Buttons/Buttons.jsx","components/App/App.js","index.js"],"names":["Timer","time","className","Math","floor","slice","Buttons","status","onStart","onStop","onReset","onWait","useRef","uuidv4","type","onClick","App","interval","useState","setTime","timerOn","setTimerOn","counter","setCounter","useEffect","current","setInterval","prevTime","clearInterval","start","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAkCeA,EA/BD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,OACE,gCACE,sBAAKC,UAAU,QAAf,UACE,uBAAMA,UAAU,QAAQ,gBAAxB,WACI,IAAMC,KAAKC,MAAOH,EAAO,KAAS,KAAKI,OAAO,GADlD,OAGA,sBAAMH,UAAU,QAAhB,sBAGF,sBAAKA,UAAU,QAAf,UACE,uBAAMA,UAAU,QAAQ,kBAAxB,WACI,IAAMC,KAAKC,MAAOH,EAAO,IAAS,KAAKI,OAAO,GADlD,OAGA,sBAAMH,UAAU,QAAhB,wBAGF,sBAAKA,UAAU,QAAf,UACE,sBAAMA,UAAU,QAAQ,kBAAxB,UACI,IAAMC,KAAKC,MAAOH,EAAO,IAAQ,KAAKI,OAAO,KAEjD,sBAAMH,UAAU,QAAhB,4B,QCwBOI,EA5CC,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OACnCC,iBAAOC,eACRD,iBAAOC,eACND,iBAAOC,eACRD,iBAAOC,eAEtB,OACE,+BACIN,EAOA,6BACE,wBAAQO,KAAK,SAASC,QAASN,EAA/B,mBADM,KANR,6BACE,wBAAQK,KAAK,SAASC,QAASP,EAA/B,oBADM,KAaV,6BACE,wBAAQM,KAAK,SAASC,QAASL,EAA/B,oBADM,KAKR,6BACE,wBAAQI,KAAK,SAASC,QAASJ,EAA/B,mBADM,S,MC+BCK,MAzDf,WACE,IAAMC,EAAWL,iBAAO,MACxB,EAAwBM,mBAAS,GAAjC,mBAAOjB,EAAP,KAAakB,EAAb,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA8BH,mBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WAQR,OAPIJ,EACFH,EAASQ,QAAUC,aAAY,WAC7BP,GAAQ,SAAAQ,GAAQ,OAAIA,EAAW,QAC9B,IAEHC,cAAcX,EAASQ,SAElB,kBAAMG,cAAcX,MAC1B,CAACG,IAEJ,IAAMS,EAAQ,WACZR,GAAW,IAwBb,OACE,sBAAKnB,UAAU,QAAf,UACE,cAAC,EAAD,CAAOD,KAAMA,IAEb,cAAC,EAAD,CACEO,QAASqB,EACTpB,OA3BO,WACXY,GAAW,GACXF,EAAQ,IA0BJT,QAZQ,WACZS,EAAQ,GACRU,KAWIlB,OAxBO,WACXY,EAAWD,EAAU,GAErBQ,YAAW,WACTP,EAAW,KACV,KACa,IAAZD,GACFD,GAAW,IAkBTd,OAAQa,QCnDhBW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.16d63b19.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Timer = ({ time }) => {\n  return (\n    <div>\n      <div className=\"field\">\n        <span className=\"value\" data-hours>\n          {('0' + Math.floor((time / 3.6e6) % 24)).slice(-2)}:\n        </span>\n        <span className=\"label\">Hours</span>\n      </div>\n\n      <div className=\"field\">\n        <span className=\"value\" data-minutes>\n          {('0' + Math.floor((time / 60000) % 60)).slice(-2)}:\n        </span>\n        <span className=\"label\">Minutes</span>\n      </div>\n\n      <div className=\"field\">\n        <span className=\"value\" data-seconds>\n          {('0' + Math.floor((time / 1000) % 60)).slice(-2)}\n        </span>\n        <span className=\"label\">Seconds</span>\n      </div>\n    </div>\n  );\n};\n\nTimer.propTypes = {\n  time: PropTypes.number.isRequired,\n};\n\nexport default Timer;\n","import React, { useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nconst Buttons = ({ status, onStart, onStop, onReset, onWait }) => {\n  const startId = useRef(uuidv4());\n  const stopId = useRef(uuidv4());\n  const resetId = useRef(uuidv4());\n  const waitId = useRef(uuidv4());\n\n  return (\n    <ul>\n      {!status ? (\n        <li key=\"0\">\n          <button type=\"button\" onClick={onStart}>\n            Start\n          </button>\n        </li>\n      ) : (\n        <li key=\"1\">\n          <button type=\"button\" onClick={onStop}>\n            Stop\n          </button>\n        </li>\n      )}\n\n      <li key=\"3\">\n        <button type=\"button\" onClick={onReset}>\n          Reset\n        </button>\n      </li>\n      <li key=\"4\">\n        <button type=\"button\" onClick={onWait}>\n          Wait\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nButtons.propTypes = {\n  onStart: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  onWait: PropTypes.func.isRequired,\n  status: PropTypes.bool.isRequired,\n};\n\nexport default Buttons;\n","import { useState, useEffect, useRef } from 'react';\nimport Timer from '../Timer';\nimport Buttons from '../Buttons';\nimport './App.css';\n\nfunction App() {\n  const interval = useRef(null);\n  const [time, setTime] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    if (timerOn) {\n      interval.current = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n    } else {\n      clearInterval(interval.current);\n    }\n    return () => clearInterval(interval);\n  }, [timerOn]);\n\n  const start = () => {\n    setTimerOn(true);\n  };\n\n  const stop = () => {\n    setTimerOn(false);\n    setTime(0);\n  };\n\n  const wait = () => {\n    setCounter(counter + 1);\n\n    setTimeout(() => {\n      setCounter(0);\n    }, 300);\n    if (counter === 1) {\n      setTimerOn(false);\n    }\n  };\n\n  const reset = () => {\n    setTime(0);\n    start();\n  };\n\n  return (\n    <div className=\"timer\">\n      <Timer time={time}></Timer>\n\n      <Buttons\n        onStart={start}\n        onStop={stop}\n        onReset={reset}\n        onWait={wait}\n        status={timerOn}\n      ></Buttons>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}